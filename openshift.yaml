apiVersion: v1
kind: Template
metadata:
  name: s2i-example-log
  annotations:
    openshift.io/display-name: "Thoth S2I Example Logger"
    openshift.io/documentation-url: "https://github.com/thoth-station/s2i-example-tensorflow"
    openshift.io/provider-display-name: "Red Hat, Inc."
    description: |-
      An example application integrating OpenShift's s2i with Thoth's recommendation engine for Python stack.
    version: 0.2.0
    tags: thoth,openshift,s2i,python
    iconClass: icon-python
  labels:
    template: s2i-example-log
    app: "s2i-example-log"

parameters:
  - description: "Thoth Environment to use for retrieving advices."
    displayName: "Environment"
    name: "THOTH_HOST"
    required: true
    value: "api.moc.thoth-station.ninja"

objects:
  - kind: BuildConfig
    apiVersion: v1
    metadata:
      name: "s2i-example-log"
      labels:
        app: "s2i-example-log"
    spec:
      successfulBuildsHistoryLimit: 1
      failedBuildsHistoryLimit: 2
      resources:
        requests:
          cpu: 1
          memory: 1Gi
        limits:
          cpu: 1
          memory: 1Gi
      output:
        to:
          kind: ImageStreamTag
          name: "s2i-example-log:latest"
      source:
        type: Git
        git:
          uri: "https://github.com/thoth-station/s2i-example-tensorflow"
          ref: "log-thoth"
      strategy:
        type: Source
        sourceStrategy:
          from:
            kind: ImageStreamTag
            name: "s2i-thoth-ubi8-py36:latest"
          env:
            # Enable Pipenv in OpenShift's s2i.
            - name: "ENABLE_PIPENV"
              value: "1"
            # Force use Thoth service.
            - name: "THOTH_ADVISE"
              value: "1"
            # Set to 1 if you would like to submit stack to Thoth but not use
            # the recommended stack - Pipfile.lock from the Git repo will be
            # used.
            - name: "THOTH_DRY_RUN"
              value: "0"
            # .thoth.yaml file is generated from template file
            # thoth_conf_template.yaml
            - name: "THAMOS_CONFIG_TEMPLATE"
              value: "thoth_conf_template.yaml"
            # Enable expansion based on environment variables when generating
            # .thoth.yaml file - this needs to be explictly turned on due to
            # possible security implications.
            - name: "THAMOS_CONFIG_EXPAND_ENV"
              value: "1"
            # Do not use cached results, always force analysis on Thoth's side
            # if set to 1.
            - name: "THAMOS_FORCE"
              value: "1"
            # Run thamos in verbose mode to show what's going on.
            - name: "THAMOS_VERBOSE"
              value: "1"
            # The adviser on Thoth's backend side is run in debug mode, you can
            # obtain logs by running thamos logs <analysis id> or directly on
            # Thoth's user API (the analysis id gets printed into the console
            # during the build process in OpenShift).
            - name: "THAMOS_DEBUG"
              value: "0"
            # Thoth deployment to be used - pass just host, API discovery is
            # performed by Thamos.
            - name: "THOTH_HOST"
              value: "${THOTH_HOST}"
            # Use latest sources of Thamos and Invectio from Git master.
            - name: "THOTH_FROM_MASTER"
              value: "0"
            # Use original Pipfile.lock if the thoth analysis fails. 
            - name: "THOTH_ERROR_FALLBACK"
              value: "1"
            # Consider also development dependencies stated in the lock file.
            - name: "THAMOS_DEV"
              value: "0"
      triggers:
        - type: ImageChange
          imageChange: {}

  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      labels:
        app: "s2i-example-log"
      name: "s2i-example-log"
    spec:
      replicas: 1
      selector:
        service: "s2i-example-thoth"
      template:
        metadata:
          labels:
            service: "s2i-example-thoth"
        spec:
          containers:
            - name: "s2i-example-log"
              ports:
                - containerPort: 8080
                  protocol: TCP
              resources:
                requests:
                  memory: 512Mi
                  cpu: 250m
                limits:
                  memory: 512Mi
                  cpu: 500m
      test: false
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - "s2i-example-log"
            from:
              kind: ImageStreamTag
              name: "s2i-example-log:latest"

  - apiVersion: "image.openshift.io/v1"
    kind: ImageStream
    metadata:
      labels:
        app: "s2i-example-log"
      name: "s2i-example-log"
    spec:
      name: "s2i-example-log"

  - apiVersion: "image.openshift.io/v1"
    kind: ImageStream
    metadata:
      labels:
        app: "s2i-example-log"
      name: "s2i-thoth-ubi8-py36"
    spec:
      tags:
        - name: "latest"
          from:
            kind: "DockerImage"
            name: "quay.io/thoth-station/s2i-thoth-ubi8-py36"
          referencePolicy:
            type: "Source"
